<?xml version="1.0" encoding="UTF-8"?>
  <project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>jJoules</groupId>
  	<artifactId>J-Joules</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- <packaging>maven-plugin</packaging> -->
	
	<properties>
		<junit-jupiter-version>5.6.2</junit-jupiter-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
	</properties>
	<dependencies>
		<!-- this is all you need to write tests with JUnit Jupiter -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter-version}</version>
			<!-- for writing tests "test" scope would suffice,
				but extensions are defined in the project's "main" folder, so we need "compile" -->
			<scope>compile</scope>
		</dependency>
		<!-- this dependency is needed to create parameterized tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit-jupiter-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- contains the engine that actually runs the Jupiter-tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- to demonstrate side-by-side with JUnit 4,
				let's use it as well-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-migrationsupport</artifactId>
			<version>${junit-jupiter-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit-jupiter-version}</version>
		</dependency>

		<!-- other test libraries work out of the box. e.g. ... -->
		<dependency>
			<!-- ... AssertJ ... -->
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.10.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- ... or Mockito ... -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.19.1</version>
			<scope>test</scope>
		</dependency>
		<!-- still, some benefit from additional support-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.19.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit-pioneer</groupId>
			<artifactId>junit-pioneer</artifactId>
			<version>0.1.2</version>
			<scope>test</scope>
		</dependency>
	
	
	
	
	
	
	
		<!-- <dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.13.2</version>
			<scope>test</scope>
		</dependency> -->
		<!-- contains the engine that actually runs the Jupiter-tests -->
		<!-- <dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.5.1</version>
			<scope>test</scope>
		</dependency> -->
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
		          <artifactId>maven-jar-plugin</artifactId>
		          <version>3.0.2</version>
			  <configuration>
			     <archive>
				<manifest>
					<mainClass>jJoules.Main</mainClass>
				</manifest>
			     </archive>
			  </configuration>
        	</plugin>
        	
        	
        	
        	<!--  essaie de docker -->
           <!--   <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy
                                    file="${project.build.directory}/${project.artifactId}-${project.version}.jar"
                                    tofile="${project.build.directory}/J-Joules-0.0.1-SNAPSHOT.jar" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <imageTag>${project.version}</imageTag>
                    <imageTag>latest</imageTag>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <directory>${project.build.directory}</directory>
                            <include>J-Joules-0.0.1-SNAPSHOT.jar</include>
                            <targetPath>/</targetPath>
                        </resource>
                    </resources>
                </configuration>
            </plugin>-->
        	
        	
		</plugins>
	</build>
</project>
